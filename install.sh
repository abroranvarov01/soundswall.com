#!/bin/bash

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ deploy —Å–∫—Ä–∏–ø—Ç–∞ –≤ —Å–∏—Å—Ç–µ–º—É

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${GREEN}üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ NextJS Deploy Tool${NC}"
echo ""

# –ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:${NC}"
echo ""

read -p "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–µ—Ä–≤–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: ubuntu): " SERVER_USER
read -p "IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 123.45.67.89): " SERVER_HOST
read -p "–ü—É—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: /var/www/my-app): " SERVER_PATH
read -p "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: my-app): " APP_NAME
read -p "–î–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä: mysite.com): " DOMAIN
read -p "–ü–æ—Ä—Ç Next.js (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 3000): " PORT
PORT=${PORT:-3000}
read -p "Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä: git@github.com:user/repo.git): " GIT_REPO
read -p "Git –≤–µ—Ç–∫–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é main): " GIT_BRANCH
GIT_BRANCH=${GIT_BRANCH:-main}

echo ""
echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:${NC}"
echo "SERVER_USER: $SERVER_USER"
echo "SERVER_HOST: $SERVER_HOST"
echo "SERVER_PATH: $SERVER_PATH"
echo "APP_NAME: $APP_NAME"
echo "DOMAIN: $DOMAIN"
echo "PORT: $PORT"
echo "GIT_REPO: $GIT_REPO"
echo "GIT_BRANCH: $GIT_BRANCH"
echo ""

read -p "–í—Å–µ –≤–µ—Ä–Ω–æ? (y/n): " CONFIRM
if [[ ! "$CONFIRM" =~ ^[Yy]$ ]]; then
    echo -e "${RED}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∑–∞–Ω–æ–≤–æ.${NC}"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
CONFIG_DIR="$HOME/.nextjs-deploy"
mkdir -p "$CONFIG_DIR"

cat > "$CONFIG_DIR/config" <<EOF
SERVER_USER="$SERVER_USER"
SERVER_HOST="$SERVER_HOST"
SERVER_PATH="$SERVER_PATH"
APP_NAME="$APP_NAME"
DOMAIN="$DOMAIN"
PORT=$PORT
GIT_REPO="$GIT_REPO"
GIT_BRANCH="$GIT_BRANCH"
EOF

echo ""
echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞${NC}"

# –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞
INSTALL_DIR="$HOME/.local/bin"
mkdir -p "$INSTALL_DIR"

cat > "$INSTALL_DIR/nextdeploy" <<'SCRIPT_EOF'
#!/bin/bash

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
CONFIG_FILE="$HOME/.nextjs-deploy/config"
if [ ! -f "$CONFIG_FILE" ]; then
    echo "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –ó–∞–ø—É—Å—Ç–∏—Ç–µ install.sh"
    exit 1
fi

source "$CONFIG_FILE"

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "$1" in
    setup)
        echo -e "${GREEN}üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...${NC}"
        ssh $SERVER_USER@$SERVER_HOST 'bash -s' <<'ENDSSH'
set -e
sudo apt update && sudo apt upgrade -y

if ! command -v node &> /dev/null; then
    curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
    sudo apt-get install -y nodejs
fi

if ! command -v pm2 &> /dev/null; then
    sudo npm install -g pm2
fi

if ! command -v nginx &> /dev/null; then
    sudo apt install -y nginx
    sudo systemctl enable nginx
    sudo systemctl start nginx
fi

if ! command -v certbot &> /dev/null; then
    sudo apt install -y certbot python3-certbot-nginx
fi

sudo ufw allow OpenSSH
sudo ufw allow 'Nginx Full'
sudo ufw --force enable

echo "‚úÖ –°–µ—Ä–≤–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
ENDSSH
        ;;
        
    git-setup)
        echo -e "${GREEN}üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git...${NC}"
        ssh $SERVER_USER@$SERVER_HOST 'bash -s' <<'ENDSSH'
if [ ! -f ~/.ssh/id_ed25519 ]; then
    ssh-keygen -t ed25519 -C "server-deploy-key" -f ~/.ssh/id_ed25519 -N ""
fi

echo ""
echo "üìã –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–ª—é—á –≤ GitHub/GitLab:"
cat ~/.ssh/id_ed25519.pub
echo ""

ssh-keyscan github.com >> ~/.ssh/known_hosts 2>/dev/null
ssh-keyscan gitlab.com >> ~/.ssh/known_hosts 2>/dev/null
ENDSSH
        ;;
        
    deploy|"")
        echo -e "${GREEN}üöÄ –î–µ–ø–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"
        
        ssh $SERVER_USER@$SERVER_HOST "bash -s" <<ENDSSH
set -e

if [ -d "$SERVER_PATH" ]; then
    cd $SERVER_PATH
    git stash
    git fetch origin
    git checkout $GIT_BRANCH
    git pull origin $GIT_BRANCH
else
    sudo mkdir -p \$(dirname $SERVER_PATH)
    sudo chown -R \$USER:\$USER \$(dirname $SERVER_PATH)
    git clone -b $GIT_BRANCH $GIT_REPO $SERVER_PATH
    cd $SERVER_PATH
fi

echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
npm install --force

echo "üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
npm run build

echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ PM2..."
if pm2 list | grep -q "$APP_NAME"; then
    pm2 restart $APP_NAME
else
    pm2 start npm --name "$APP_NAME" -- start
    pm2 save
fi

if [ ! -f /etc/nginx/sites-available/$APP_NAME ]; then
    echo "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."
    sudo tee /etc/nginx/sites-available/$APP_NAME > /dev/null <<'NGINX_EOF'
server {
    listen 80;
    server_name $DOMAIN;

    client_max_body_size 100M;

    location / {
        proxy_pass http://localhost:$PORT;
        proxy_http_version 1.1;
        
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
        
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-Host \$server_name;
        
        proxy_buffering off;
        proxy_redirect off;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    location /_next/static {
        proxy_pass http://localhost:$PORT;
        proxy_cache_valid 200 60m;
        proxy_cache_bypass \$http_cache_control;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    location ~* \.(ico|css|js|gif|jpeg|jpg|png|woff|woff2|ttf|svg|eot)$ {
        proxy_pass http://localhost:$PORT;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}
NGINX_EOF
    
    sudo ln -s /etc/nginx/sites-available/$APP_NAME /etc/nginx/sites-enabled/
    sudo nginx -t && sudo systemctl reload nginx
    
    echo "üîí –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SSL..."
    sudo certbot --nginx -d $DOMAIN --non-interactive --agree-tos --email admin@$DOMAIN || true
fi

echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
pm2 status $APP_NAME
ENDSSH
        ;;
        
    logs)
        ssh $SERVER_USER@$SERVER_HOST "pm2 logs $APP_NAME"
        ;;
        
    status)
        ssh $SERVER_USER@$SERVER_HOST "pm2 status $APP_NAME"
        ;;
        
    restart)
        echo -e "${YELLOW}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫...${NC}"
        ssh $SERVER_USER@$SERVER_HOST "pm2 restart $APP_NAME"
        echo -e "${GREEN}‚úÖ –ü–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ!${NC}"
        ;;
        
    stop)
        echo -e "${YELLOW}‚è∏Ô∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞...${NC}"
        ssh $SERVER_USER@$SERVER_HOST "pm2 stop $APP_NAME"
        ;;
        
    start)
        echo -e "${GREEN}‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫...${NC}"
        ssh $SERVER_USER@$SERVER_HOST "pm2 start $APP_NAME"
        ;;
        
    ssh)
        ssh $SERVER_USER@$SERVER_HOST
        ;;
        
    config)
        echo -e "${YELLOW}üìù –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:${NC}"
        cat "$CONFIG_FILE"
        ;;
        
    reinstall)
        echo -e "${YELLOW}üîÑ –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...${NC}"
        curl -fsSL https://raw.githubusercontent.com/abroranvarov01/nextjs-deploy-tool/main/install.sh | bash
        ;;
        
    *)
        echo "NextJS Deploy Tool"
        echo ""
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: nextdeploy [–∫–æ–º–∞–Ω–¥–∞]"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  deploy          –î–µ–ø–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
        echo "  setup           –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"
        echo "  git-setup       –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git –¥–æ—Å—Ç—É–ø–∞"
        echo "  logs            –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
        echo "  status          –°—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
        echo "  restart         –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
        echo "  stop            –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
        echo "  start           –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
        echo "  ssh             –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É"
        echo "  config          –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
        echo "  reinstall       –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
        echo ""
        echo "–ü—Ä–∏–º–µ—Ä—ã:"
        echo "  nextdeploy              # –¥–µ–ø–ª–æ–π"
        echo "  nextdeploy setup        # –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"
        echo "  nextdeploy logs         # —Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏"
        ;;
esac
SCRIPT_EOF

chmod +x "$INSTALL_DIR/nextdeploy"

echo -e "${GREEN}‚úÖ –ö–æ–º–∞–Ω–¥–∞ nextdeploy —Å–æ–∑–¥–∞–Ω–∞${NC}"

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ PATH –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
SHELL_RC=""
if [ -n "$BASH_VERSION" ]; then
    SHELL_RC="$HOME/.bashrc"
elif [ -n "$ZSH_VERSION" ]; then
    SHELL_RC="$HOME/.zshrc"
else
    SHELL_RC="$HOME/.profile"
fi

if [[ ":$PATH:" != *":$INSTALL_DIR:"* ]]; then
    echo "" >> "$SHELL_RC"
    echo "# NextJS Deploy Tool" >> "$SHELL_RC"
    echo "export PATH=\"\$PATH:$INSTALL_DIR\"" >> "$SHELL_RC"
    echo -e "${GREEN}‚úÖ PATH –æ–±–Ω–æ–≤–ª–µ–Ω –≤ $SHELL_RC${NC}"
fi

echo ""
echo -e "${GREEN}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
echo ""
echo -e "${YELLOW}–í—ã–ø–æ–ª–Ω–∏—Ç–µ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π:${NC}"
echo "source $SHELL_RC"
echo ""
echo -e "${GREEN}–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª${NC}"
echo ""
echo -e "${YELLOW}–¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo "  nextdeploy setup      # –ø–µ—Ä–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"
echo "  nextdeploy git-setup  # –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Git (–µ—Å–ª–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —Ä–µ–ø–æ)"
echo "  nextdeploy            # –¥–µ–ø–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "  nextdeploy logs       # –ª–æ–≥–∏"
echo "  nextdeploy status     # —Å—Ç–∞—Ç—É—Å"
echo "  nextdeploy restart    # –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
echo ""
